"""add new tables

Revision ID: 0a345af0ce12
Revises: 869cba31f154
Create Date: 2025-08-04 13:45:55.273717

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0a345af0ce12'
down_revision: Union[str, Sequence[str], None] = '869cba31f154'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_full_name'), 'users', ['full_name'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=True)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_posts_id'), 'posts', ['id'], unique=False)
    op.create_table('refresh_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=False),
    sa.Column('is_revoked', sa.Boolean(), nullable=False),
    sa.Column('device_info', sa.String(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_refresh_tokens_id'), 'refresh_tokens', ['id'], unique=False)
    op.create_index(op.f('ix_refresh_tokens_jti'), 'refresh_tokens', ['jti'], unique=True)
    op.create_index(op.f('ix_refresh_tokens_refresh_token'), 'refresh_tokens', ['refresh_token'], unique=False)
    op.create_table('cart_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['catalog.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('bond', 'name_bond',
               existing_type=sa.VARCHAR(length=7),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('bond', 'bond_description',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('bond', 'bond_cooling',
               existing_type=sa.TEXT(),
               nullable=False)
    op.drop_constraint(op.f('bond_unique'), 'bond', type_='unique')
    op.alter_column('bond_to_code', 'code_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('bond_to_code', 'bond_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('catalog', 'category_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(op.f('code_grinding_wheels_code_key'), 'catalog', type_='unique')
    op.drop_constraint(op.f('categories_name_key'), 'categories', type_='unique')
    op.alter_column('equipment_code', 'equipment_model_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('equipment_code', 'catalog_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(op.f('equipment_model1_model_key'), 'equipment_model', type_='unique')
    op.alter_column('grid_size', 'grid_size',
               existing_type=sa.VARCHAR(length=35),
               type_=sa.String(length=50),
               nullable=False)
    op.drop_constraint(op.f('h_inch_key'), 'mounting', type_='unique')
    op.drop_constraint(op.f('h_mm_key'), 'mounting', type_='unique')
    op.alter_column('producer_name', 'name_producer',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.drop_constraint(op.f('produser_name_name_produser_key'), 'producer_name', type_='unique')
    op.alter_column('shape_img', 'shape',
               existing_type=sa.VARCHAR(length=12),
               type_=sa.String(length=255),
               nullable=False)
    op.alter_column('shape_img', 'img_url',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_constraint(op.f('shape_unique'), 'shape_img', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(op.f('shape_unique'), 'shape_img', ['shape'], postgresql_nulls_not_distinct=False)
    op.alter_column('shape_img', 'img_url',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('shape_img', 'shape',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=12),
               nullable=True)
    op.create_unique_constraint(op.f('produser_name_name_produser_key'), 'producer_name', ['name_producer'], postgresql_nulls_not_distinct=False)
    op.alter_column('producer_name', 'name_producer',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.create_unique_constraint(op.f('h_mm_key'), 'mounting', ['mm'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('h_inch_key'), 'mounting', ['inch'], postgresql_nulls_not_distinct=False)
    op.alter_column('grid_size', 'grid_size',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=35),
               nullable=True)
    op.create_unique_constraint(op.f('equipment_model1_model_key'), 'equipment_model', ['model'], postgresql_nulls_not_distinct=False)
    op.alter_column('equipment_code', 'catalog_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('equipment_code', 'equipment_model_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_unique_constraint(op.f('categories_name_key'), 'categories', ['name'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('code_grinding_wheels_code_key'), 'catalog', ['code'], postgresql_nulls_not_distinct=False)
    op.alter_column('catalog', 'category_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('bond_to_code', 'bond_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('bond_to_code', 'code_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_unique_constraint(op.f('bond_unique'), 'bond', ['name_bond'], postgresql_nulls_not_distinct=False)
    op.alter_column('bond', 'bond_cooling',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('bond', 'bond_description',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('bond', 'name_bond',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=7),
               existing_nullable=False)
    op.drop_table('cart_item')
    op.drop_index(op.f('ix_refresh_tokens_refresh_token'), table_name='refresh_tokens')
    op.drop_index(op.f('ix_refresh_tokens_jti'), table_name='refresh_tokens')
    op.drop_index(op.f('ix_refresh_tokens_id'), table_name='refresh_tokens')
    op.drop_table('refresh_tokens')
    op.drop_index(op.f('ix_posts_id'), table_name='posts')
    op.drop_table('posts')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_full_name'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
